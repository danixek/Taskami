/*
 * Todoist API
 *
 * # Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app/settings/integrations/app-management).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime. 
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.Net.Http;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Client
{
    /// <summary>
    /// Provides hosting configuration for Org.OpenAPITools
    /// </summary>
    public class HostConfiguration
    {
        private readonly IServiceCollection _services;
        private readonly JsonSerializerOptions _jsonOptions = new JsonSerializerOptions();

        internal bool HttpClientsAdded { get; private set; }

        /// <summary>
        /// Instantiates the class 
        /// </summary>
        /// <param name="services"></param>
        public HostConfiguration(IServiceCollection services)
        {
            _services = services;
            _jsonOptions.Converters.Add(new JsonStringEnumConverter());
            _jsonOptions.Converters.Add(new DateTimeJsonConverter());
            _jsonOptions.Converters.Add(new DateTimeNullableJsonConverter());
            _jsonOptions.Converters.Add(new DateOnlyJsonConverter());
            _jsonOptions.Converters.Add(new DateOnlyNullableJsonConverter());
            _jsonOptions.Converters.Add(new ActivityEventsJsonConverter());
            _jsonOptions.Converters.Add(new AssigneeIdJsonConverter());
            _jsonOptions.Converters.Add(new BackupResponseJsonConverter());
            _jsonOptions.Converters.Add(new CollaboratorJsonConverter());
            _jsonOptions.Converters.Add(new CollaboratorRoleJsonConverter());
            _jsonOptions.Converters.Add(new CollaboratorRoleNullableJsonConverter());
            _jsonOptions.Converters.Add(new CommentIdJsonConverter());
            _jsonOptions.Converters.Add(new CommentId1JsonConverter());
            _jsonOptions.Converters.Add(new ContentJsonConverter());
            _jsonOptions.Converters.Add(new DeadlineDateJsonConverter());
            _jsonOptions.Converters.Add(new DeadlineLangJsonConverter());
            _jsonOptions.Converters.Add(new DescriptionJsonConverter());
            _jsonOptions.Converters.Add(new DueDateJsonConverter());
            _jsonOptions.Converters.Add(new DueDatetimeJsonConverter());
            _jsonOptions.Converters.Add(new DueLangJsonConverter());
            _jsonOptions.Converters.Add(new DueStringJsonConverter());
            _jsonOptions.Converters.Add(new DurationJsonConverter());
            _jsonOptions.Converters.Add(new DurationUnitJsonConverter());
            _jsonOptions.Converters.Add(new EmailObjectTypeJsonConverter());
            _jsonOptions.Converters.Add(new EmailObjectTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new EmailObjectTypePre9221JsonConverter());
            _jsonOptions.Converters.Add(new EmailObjectTypePre9221NullableJsonConverter());
            _jsonOptions.Converters.Add(new EmailResponseJsonConverter());
            _jsonOptions.Converters.Add(new ExposedCollaboratorSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new FileURLResponseJsonConverter());
            _jsonOptions.Converters.Add(new FolderViewJsonConverter());
            _jsonOptions.Converters.Add(new FormattedPriceJsonConverter());
            _jsonOptions.Converters.Add(new FormattedPriceListingJsonConverter());
            _jsonOptions.Converters.Add(new GetDataV2ResponseJsonConverter());
            _jsonOptions.Converters.Add(new HTTPValidationErrorJsonConverter());
            _jsonOptions.Converters.Add(new IDMappingJsonConverter());
            _jsonOptions.Converters.Add(new ItemSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new ItemSyncViewDeadlineValueJsonConverter());
            _jsonOptions.Converters.Add(new ItemSyncViewDurationValueJsonConverter());
            _jsonOptions.Converters.Add(new LabelRestViewJsonConverter());
            _jsonOptions.Converters.Add(new LabelsJsonConverter());
            _jsonOptions.Converters.Add(new MemberViewJsonConverter());
            _jsonOptions.Converters.Add(new MigratePersonalTokenResponseJsonConverter());
            _jsonOptions.Converters.Add(new ModelConfigurationJsonConverter());
            _jsonOptions.Converters.Add(new NoteSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new NoteSyncViewFileAttachmentValueJsonConverter());
            _jsonOptions.Converters.Add(new NotificationChannelJsonConverter());
            _jsonOptions.Converters.Add(new NotificationChannelNullableJsonConverter());
            _jsonOptions.Converters.Add(new NotificationTypeJsonConverter());
            _jsonOptions.Converters.Add(new NotificationTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new ObjIdJsonConverter());
            _jsonOptions.Converters.Add(new ObjTypeJsonConverter());
            _jsonOptions.Converters.Add(new ObjectIdJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListActivityEventsJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListAnnotatedProjectV1ViewFieldInfoAnnotationNoneTypeRequiredTrueExamplesIdNameChildOrderParentIdColorCollapsedIsArchivedIsDeletedViewStyleJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListAnnotatedUnionPersonalProjectSyncViewWorkspaceProjectSyncViewFieldInfoAnnotationNoneTypeRequiredTrueTitleProjectObjectJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListCollaboratorJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListItemSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListLabelRestViewJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListNoteSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListSectionSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new PaginatedListStrJsonConverter());
            _jsonOptions.Converters.Add(new ParentIdJsonConverter());
            _jsonOptions.Converters.Add(new ParentItemIdJsonConverter());
            _jsonOptions.Converters.Add(new ParentProjectIdJsonConverter());
            _jsonOptions.Converters.Add(new PersonalProjectSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new PlanDetailsResponseJsonConverter());
            _jsonOptions.Converters.Add(new PlanPriceJsonConverter());
            _jsonOptions.Converters.Add(new PriorityJsonConverter());
            _jsonOptions.Converters.Add(new ProjectAccessViewJsonConverter());
            _jsonOptions.Converters.Add(new ProjectIdJsonConverter());
            _jsonOptions.Converters.Add(new ProjectId1JsonConverter());
            _jsonOptions.Converters.Add(new ProjectId2JsonConverter());
            _jsonOptions.Converters.Add(new ProjectId3JsonConverter());
            _jsonOptions.Converters.Add(new ProjectId4JsonConverter());
            _jsonOptions.Converters.Add(new ProjectImportCreateResponseWithObjectsJsonConverter());
            _jsonOptions.Converters.Add(new ProjectImportResponseJsonConverter());
            _jsonOptions.Converters.Add(new ProjectObjectJsonConverter());
            _jsonOptions.Converters.Add(new ProjectStatusJsonConverter());
            _jsonOptions.Converters.Add(new ProjectStatusNullableJsonConverter());
            _jsonOptions.Converters.Add(new ProjectViewStyleJsonConverter());
            _jsonOptions.Converters.Add(new ProjectViewStyleNullableJsonConverter());
            _jsonOptions.Converters.Add(new ProjectVisibilityJsonConverter());
            _jsonOptions.Converters.Add(new ProjectVisibilityNullableJsonConverter());
            _jsonOptions.Converters.Add(new ProjectsResponseJsonConverter());
            _jsonOptions.Converters.Add(new PublicProjectConfigurationJsonConverter());
            _jsonOptions.Converters.Add(new RemovedNotificationTypeJsonConverter());
            _jsonOptions.Converters.Add(new RemovedNotificationTypeNullableJsonConverter());
            _jsonOptions.Converters.Add(new ResponseArchiveProjectApiV1ProjectsProjectIdArchivePostJsonConverter());
            _jsonOptions.Converters.Add(new ResponseCreateProjectApiV1ProjectsPostJsonConverter());
            _jsonOptions.Converters.Add(new ResponseGetProjectApiV1ProjectsProjectIdGetJsonConverter());
            _jsonOptions.Converters.Add(new ResponseUnarchiveProjectApiV1ProjectsProjectIdUnarchivePostJsonConverter());
            _jsonOptions.Converters.Add(new ResponseUpdateProjectApiV1ProjectsProjectIdPostJsonConverter());
            _jsonOptions.Converters.Add(new RoleJsonConverter());
            _jsonOptions.Converters.Add(new SectionIdJsonConverter());
            _jsonOptions.Converters.Add(new SectionId1JsonConverter());
            _jsonOptions.Converters.Add(new SectionId2JsonConverter());
            _jsonOptions.Converters.Add(new SectionId3JsonConverter());
            _jsonOptions.Converters.Add(new SectionSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new StatusOkResponseJsonConverter());
            _jsonOptions.Converters.Add(new TaskIdJsonConverter());
            _jsonOptions.Converters.Add(new TaskId1JsonConverter());
            _jsonOptions.Converters.Add(new TaskId2JsonConverter());
            _jsonOptions.Converters.Add(new TaskId3JsonConverter());
            _jsonOptions.Converters.Add(new TasksCompletedDateResponseJsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestCommentsBody1JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestCommentsBody2JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestLabelsBody1JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestLabelsBody2JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestLabelsBody3JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestLabelsBody3ColorJsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestLabelsBody4JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestLabelsBody4ColorJsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestProjectsBody1JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestProjectsBody2JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestSectionsBody1JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestSectionsBody2JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestTasksBody1JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestTasksBody2JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiRestTasksBody3JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiSyncRestControllerBody1JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiSyncRestControllerBody2JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiSyncRestImportExportBodyJsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiSyncRestQuickBodyJsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiSyncRestWorkspacesBody1JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsApiSyncRestWorkspacesBody2JsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsAppPlatformControllersAccessTokenBodyJsonConverter());
            _jsonOptions.Converters.Add(new TodoistAppsImportExportControllersRestBodyJsonConverter());
            _jsonOptions.Converters.Add(new UndefinedJsonConverter());
            _jsonOptions.Converters.Add(new UndefinedNullableJsonConverter());
            _jsonOptions.Converters.Add(new UploadResultJsonConverter());
            _jsonOptions.Converters.Add(new UsersResponseJsonConverter());
            _jsonOptions.Converters.Add(new ValidationErrorJsonConverter());
            _jsonOptions.Converters.Add(new ValidationErrorLocInnerJsonConverter());
            _jsonOptions.Converters.Add(new WorkspaceInvitationViewJsonConverter());
            _jsonOptions.Converters.Add(new WorkspaceProjectSyncViewJsonConverter());
            _jsonOptions.Converters.Add(new WorkspaceProjectViewJsonConverter());
            _jsonOptions.Converters.Add(new WorkspaceRoleJsonConverter());
            _jsonOptions.Converters.Add(new WorkspaceRoleNullableJsonConverter());
            _jsonOptions.Converters.Add(new WorkspaceUserViewJsonConverter());
            JsonSerializerOptionsProvider jsonSerializerOptionsProvider = new(_jsonOptions);
            _services.AddSingleton(jsonSerializerOptionsProvider);
            _services.AddSingleton<IApiFactory, ApiFactory>();
            _services.AddSingleton<ActivityApiEvents>();
            _services.AddSingleton<AuthorizationApiEvents>();
            _services.AddSingleton<BackupsApiEvents>();
            _services.AddSingleton<CommentsApiEvents>();
            _services.AddSingleton<EmailsApiEvents>();
            _services.AddSingleton<IdsApiEvents>();
            _services.AddSingleton<LabelsApiEvents>();
            _services.AddSingleton<ProjectsApiEvents>();
            _services.AddSingleton<SectionsApiEvents>();
            _services.AddSingleton<TasksApiEvents>();
            _services.AddSingleton<TemplatesApiEvents>();
            _services.AddSingleton<UploadsApiEvents>();
            _services.AddSingleton<UserApiEvents>();
            _services.AddSingleton<WorkspaceApiEvents>();
        }

        /// <summary>
        /// Configures the HttpClients.
        /// </summary>
        /// <param name="client"></param>
        /// <param name="builder"></param>
        /// <returns></returns>
        public HostConfiguration AddApiHttpClients
        (
            Action<HttpClient>? client = null, Action<IHttpClientBuilder>? builder = null)
        {
            if (client == null)
                client = c => c.BaseAddress = new Uri(ClientUtils.BASE_ADDRESS);

            List<IHttpClientBuilder> builders = new List<IHttpClientBuilder>();

            builders.Add(_services.AddHttpClient<IActivityApi, ActivityApi>(client));
            builders.Add(_services.AddHttpClient<IAuthorizationApi, AuthorizationApi>(client));
            builders.Add(_services.AddHttpClient<IBackupsApi, BackupsApi>(client));
            builders.Add(_services.AddHttpClient<ICommentsApi, CommentsApi>(client));
            builders.Add(_services.AddHttpClient<IEmailsApi, EmailsApi>(client));
            builders.Add(_services.AddHttpClient<IIdsApi, IdsApi>(client));
            builders.Add(_services.AddHttpClient<ILabelsApi, LabelsApi>(client));
            builders.Add(_services.AddHttpClient<IProjectsApi, ProjectsApi>(client));
            builders.Add(_services.AddHttpClient<ISectionsApi, SectionsApi>(client));
            builders.Add(_services.AddHttpClient<ITasksApi, TasksApi>(client));
            builders.Add(_services.AddHttpClient<ITemplatesApi, TemplatesApi>(client));
            builders.Add(_services.AddHttpClient<IUploadsApi, UploadsApi>(client));
            builders.Add(_services.AddHttpClient<IUserApi, UserApi>(client));
            builders.Add(_services.AddHttpClient<IWorkspaceApi, WorkspaceApi>(client));
            
            if (builder != null)
                foreach (IHttpClientBuilder instance in builders)
                    builder(instance);

            HttpClientsAdded = true;

            return this;
        }

        /// <summary>
        /// Configures the JsonSerializerSettings
        /// </summary>
        /// <param name="options"></param>
        /// <returns></returns>
        public HostConfiguration ConfigureJsonOptions(Action<JsonSerializerOptions> options)
        {
            options(_jsonOptions);

            return this;
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="token"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(TTokenBase token) where TTokenBase : TokenBase
        {
            return AddTokens(new TTokenBase[]{ token });
        }

        /// <summary>
        /// Adds tokens to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <param name="tokens"></param>
        /// <returns></returns>
        public HostConfiguration AddTokens<TTokenBase>(IEnumerable<TTokenBase> tokens) where TTokenBase : TokenBase
        {
            TokenContainer<TTokenBase> container = new TokenContainer<TTokenBase>(tokens);
            _services.AddSingleton(services => container);

            return this;
        }

        /// <summary>
        /// Adds a token provider to your IServiceCollection
        /// </summary>
        /// <typeparam name="TTokenProvider"></typeparam>
        /// <typeparam name="TTokenBase"></typeparam>
        /// <returns></returns>
        public HostConfiguration UseProvider<TTokenProvider, TTokenBase>() 
            where TTokenProvider : TokenProvider<TTokenBase>
            where TTokenBase : TokenBase
        {
            _services.AddSingleton<TTokenProvider>();
            _services.AddSingleton<TokenProvider<TTokenBase>>(services => services.GetRequiredService<TTokenProvider>());

            return this;
        }
    }
}
