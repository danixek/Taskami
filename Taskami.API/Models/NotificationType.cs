/*
 * Todoist API
 *
 * # Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app/settings/integrations/app-management).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime. 
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Org.OpenAPITools.Converters;

namespace Org.OpenAPITools.Models
{ 
        /// <summary>
        /// The type of notification being sent
        /// </summary>
        /// <value>The type of notification being sent</value>
        [TypeConverter(typeof(CustomEnumConverter<NotificationType>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum NotificationType
        {
            
            /// <summary>
            /// Enum NoteAddedEnum for note_added
            /// </summary>
            [EnumMember(Value = "note_added")]
            NoteAddedEnum = 1,
            
            /// <summary>
            /// Enum ItemAssignedEnum for item_assigned
            /// </summary>
            [EnumMember(Value = "item_assigned")]
            ItemAssignedEnum = 2,
            
            /// <summary>
            /// Enum ItemCompletedEnum for item_completed
            /// </summary>
            [EnumMember(Value = "item_completed")]
            ItemCompletedEnum = 3,
            
            /// <summary>
            /// Enum ItemUncompletedEnum for item_uncompleted
            /// </summary>
            [EnumMember(Value = "item_uncompleted")]
            ItemUncompletedEnum = 4,
            
            /// <summary>
            /// Enum KarmaLevelEnum for karma_level
            /// </summary>
            [EnumMember(Value = "karma_level")]
            KarmaLevelEnum = 5,
            
            /// <summary>
            /// Enum ShareInvitationSentEnum for share_invitation_sent
            /// </summary>
            [EnumMember(Value = "share_invitation_sent")]
            ShareInvitationSentEnum = 6,
            
            /// <summary>
            /// Enum ShareInvitationAcceptedEnum for share_invitation_accepted
            /// </summary>
            [EnumMember(Value = "share_invitation_accepted")]
            ShareInvitationAcceptedEnum = 7,
            
            /// <summary>
            /// Enum ShareInvitationRejectedEnum for share_invitation_rejected
            /// </summary>
            [EnumMember(Value = "share_invitation_rejected")]
            ShareInvitationRejectedEnum = 8,
            
            /// <summary>
            /// Enum ShareInvitationBlockedByProjectLimitEnum for share_invitation_blocked_by_project_limit
            /// </summary>
            [EnumMember(Value = "share_invitation_blocked_by_project_limit")]
            ShareInvitationBlockedByProjectLimitEnum = 9,
            
            /// <summary>
            /// Enum UserLeftProjectEnum for user_left_project
            /// </summary>
            [EnumMember(Value = "user_left_project")]
            UserLeftProjectEnum = 10,
            
            /// <summary>
            /// Enum UserRemovedFromProjectEnum for user_removed_from_project
            /// </summary>
            [EnumMember(Value = "user_removed_from_project")]
            UserRemovedFromProjectEnum = 11,
            
            /// <summary>
            /// Enum TeamsWorkspaceUpgradedEnum for teams_workspace_upgraded
            /// </summary>
            [EnumMember(Value = "teams_workspace_upgraded")]
            TeamsWorkspaceUpgradedEnum = 12,
            
            /// <summary>
            /// Enum TeamsWorkspaceCanceledEnum for teams_workspace_canceled
            /// </summary>
            [EnumMember(Value = "teams_workspace_canceled")]
            TeamsWorkspaceCanceledEnum = 13,
            
            /// <summary>
            /// Enum TeamsWorkspacePaymentFailedEnum for teams_workspace_payment_failed
            /// </summary>
            [EnumMember(Value = "teams_workspace_payment_failed")]
            TeamsWorkspacePaymentFailedEnum = 14,
            
            /// <summary>
            /// Enum WorkspaceInvitationCreatedEnum for workspace_invitation_created
            /// </summary>
            [EnumMember(Value = "workspace_invitation_created")]
            WorkspaceInvitationCreatedEnum = 15,
            
            /// <summary>
            /// Enum WorkspaceInvitationAcceptedEnum for workspace_invitation_accepted
            /// </summary>
            [EnumMember(Value = "workspace_invitation_accepted")]
            WorkspaceInvitationAcceptedEnum = 16,
            
            /// <summary>
            /// Enum WorkspaceInvitationRejectedEnum for workspace_invitation_rejected
            /// </summary>
            [EnumMember(Value = "workspace_invitation_rejected")]
            WorkspaceInvitationRejectedEnum = 17,
            
            /// <summary>
            /// Enum ProjectArchivedEnum for project_archived
            /// </summary>
            [EnumMember(Value = "project_archived")]
            ProjectArchivedEnum = 18,
            
            /// <summary>
            /// Enum ProjectMovedEnum for project_moved
            /// </summary>
            [EnumMember(Value = "project_moved")]
            ProjectMovedEnum = 19,
            
            /// <summary>
            /// Enum RemovedFromWorkspaceEnum for removed_from_workspace
            /// </summary>
            [EnumMember(Value = "removed_from_workspace")]
            RemovedFromWorkspaceEnum = 20,
            
            /// <summary>
            /// Enum WorkspaceDeletedEnum for workspace_deleted
            /// </summary>
            [EnumMember(Value = "workspace_deleted")]
            WorkspaceDeletedEnum = 21,
            
            /// <summary>
            /// Enum MessageEnum for message
            /// </summary>
            [EnumMember(Value = "message")]
            MessageEnum = 22,
            
            /// <summary>
            /// Enum WorkspaceUserJoinedByDomainEnum for workspace_user_joined_by_domain
            /// </summary>
            [EnumMember(Value = "workspace_user_joined_by_domain")]
            WorkspaceUserJoinedByDomainEnum = 23
        }
}
