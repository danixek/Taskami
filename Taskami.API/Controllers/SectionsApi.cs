/*
 * Todoist API
 *
 * # Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app/settings/integrations/app-management).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime. 
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SectionsApiController : ControllerBase
    { 
        /// <summary>
        /// Create Section
        /// </summary>
        /// <remarks>Create a new section</remarks>
        /// <param name="todoistAppsApiRestSectionsBody1"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/sections")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateSectionApiV1SectionsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(SectionSyncView), description: "Successful Response")]
        public virtual IActionResult CreateSectionApiV1SectionsPost([FromBody]TodoistAppsApiRestSectionsBody1 todoistAppsApiRestSectionsBody1)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"added_at\" : \"added_at\",\r\n  \"is_deleted\" : true,\r\n  \"updated_at\" : \"updated_at\",\r\n  \"is_archived\" : true,\r\n  \"user_id\" : \"user_id\",\r\n  \"project_id\" : \"project_id\",\r\n  \"archived_at\" : \"archived_at\",\r\n  \"name\" : \"name\",\r\n  \"is_collapsed\" : true,\r\n  \"id\" : \"id\",\r\n  \"section_order\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SectionSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete Section
        /// </summary>
        /// <remarks>Delete the section and all of its tasks</remarks>
        /// <param name="sectionId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/api/v1/sections/{section_id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteSectionApiV1SectionsSectionIdDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Successful Response")]
        public virtual IActionResult DeleteSectionApiV1SectionsSectionIdDelete([FromRoute (Name = "section_id")][Required]SectionId3 sectionId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Section
        /// </summary>
        /// <remarks>Return the section for the given section ID</remarks>
        /// <param name="sectionId"></param>
        /// <param name="publicKey"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/sections/{section_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetSectionApiV1SectionsSectionIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(SectionSyncView), description: "Successful Response")]
        public virtual IActionResult GetSectionApiV1SectionsSectionIdGet([FromRoute (Name = "section_id")][Required]SectionId2 sectionId, [FromQuery (Name = "public_key")]string publicKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"added_at\" : \"added_at\",\r\n  \"is_deleted\" : true,\r\n  \"updated_at\" : \"updated_at\",\r\n  \"is_archived\" : true,\r\n  \"user_id\" : \"user_id\",\r\n  \"project_id\" : \"project_id\",\r\n  \"archived_at\" : \"archived_at\",\r\n  \"name\" : \"name\",\r\n  \"is_collapsed\" : true,\r\n  \"id\" : \"id\",\r\n  \"section_order\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SectionSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Sections
        /// </summary>
        /// <remarks>Return a list of all active sections for the user</remarks>
        /// <param name="projectId"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/sections")]
        [ValidateModelState]
        [SwaggerOperation("GetSectionsApiV1SectionsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(PaginatedListSectionSyncView), description: "Successful Response")]
        public virtual IActionResult GetSectionsApiV1SectionsGet([FromQuery (Name = "project_id")]ProjectId projectId, [FromQuery (Name = "cursor")][RegularExpression("^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$")] [MinLength(1)]string cursor, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"next_cursor\" : \"next_cursor\",\r\n  \"results\" : [ {\r\n    \"added_at\" : \"added_at\",\r\n    \"is_deleted\" : true,\r\n    \"updated_at\" : \"updated_at\",\r\n    \"is_archived\" : true,\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"archived_at\" : \"archived_at\",\r\n    \"name\" : \"name\",\r\n    \"is_collapsed\" : true,\r\n    \"id\" : \"id\",\r\n    \"section_order\" : 0\r\n  }, {\r\n    \"added_at\" : \"added_at\",\r\n    \"is_deleted\" : true,\r\n    \"updated_at\" : \"updated_at\",\r\n    \"is_archived\" : true,\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"archived_at\" : \"archived_at\",\r\n    \"name\" : \"name\",\r\n    \"is_collapsed\" : true,\r\n    \"id\" : \"id\",\r\n    \"section_order\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PaginatedListSectionSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update Section
        /// </summary>
        /// <param name="sectionId"></param>
        /// <param name="todoistAppsApiRestSectionsBody2"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/sections/{section_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateSectionApiV1SectionsSectionIdPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(SectionSyncView), description: "Successful Response")]
        public virtual IActionResult UpdateSectionApiV1SectionsSectionIdPost([FromRoute (Name = "section_id")][Required]SectionId3 sectionId, [FromBody]TodoistAppsApiRestSectionsBody2 todoistAppsApiRestSectionsBody2)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"added_at\" : \"added_at\",\r\n  \"is_deleted\" : true,\r\n  \"updated_at\" : \"updated_at\",\r\n  \"is_archived\" : true,\r\n  \"user_id\" : \"user_id\",\r\n  \"project_id\" : \"project_id\",\r\n  \"archived_at\" : \"archived_at\",\r\n  \"name\" : \"name\",\r\n  \"is_collapsed\" : true,\r\n  \"id\" : \"id\",\r\n  \"section_order\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SectionSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
