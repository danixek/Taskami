/*
 * Todoist API
 *
 * # Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app/settings/integrations/app-management).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime. 
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ProjectsApiController : ControllerBase
    { 
        /// <summary>
        /// Archive Project
        /// </summary>
        /// <remarks>Marks a project as archived. For personal projects, this will archive it just for the initiating user (leaving it visible to any other collaborators). For workspace projects, this will archive it for all workspace users, removing it from view.</remarks>
        /// <param name="projectId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/projects/{project_id}/archive")]
        [ValidateModelState]
        [SwaggerOperation("ArchiveProjectApiV1ProjectsProjectIdArchivePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ResponseArchiveProjectApiV1ProjectsProjectIdArchivePost), description: "Successful Response")]
        public virtual IActionResult ArchiveProjectApiV1ProjectsProjectIdArchivePost([FromRoute (Name = "project_id")][Required]ProjectId3 projectId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"public_key\" : \"public_key\",\r\n  \"is_favorite\" : true,\r\n  \"access\" : {\r\n    \"visibility\" : \"restricted\",\r\n    \"configuration\" : { }\r\n  },\r\n  \"role\" : \"role\",\r\n  \"color\" : \"color\",\r\n  \"is_frozen\" : true,\r\n  \"created_at\" : \"created_at\",\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"can_assign_tasks\" : true,\r\n  \"inbox_project\" : true,\r\n  \"default_order\" : 6,\r\n  \"is_deleted\" : true,\r\n  \"is_archived\" : true,\r\n  \"updated_at\" : \"updated_at\",\r\n  \"parent_id\" : \"parent_id\",\r\n  \"is_shared\" : true,\r\n  \"name\" : \"name\",\r\n  \"view_style\" : \"view_style\",\r\n  \"creator_uid\" : \"creator_uid\",\r\n  \"id\" : \"id\",\r\n  \"child_order\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ResponseArchiveProjectApiV1ProjectsProjectIdArchivePost>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Project
        /// </summary>
        /// <remarks>Creates a new project and returns it</remarks>
        /// <param name="todoistAppsApiRestProjectsBody1"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/projects")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateProjectApiV1ProjectsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ResponseCreateProjectApiV1ProjectsPost), description: "Successful Response")]
        public virtual IActionResult CreateProjectApiV1ProjectsPost([FromBody]TodoistAppsApiRestProjectsBody1 todoistAppsApiRestProjectsBody1)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"public_key\" : \"public_key\",\r\n  \"is_favorite\" : true,\r\n  \"access\" : {\r\n    \"visibility\" : \"restricted\",\r\n    \"configuration\" : { }\r\n  },\r\n  \"role\" : \"role\",\r\n  \"color\" : \"color\",\r\n  \"is_frozen\" : true,\r\n  \"created_at\" : \"created_at\",\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"can_assign_tasks\" : true,\r\n  \"inbox_project\" : true,\r\n  \"default_order\" : 6,\r\n  \"is_deleted\" : true,\r\n  \"is_archived\" : true,\r\n  \"updated_at\" : \"updated_at\",\r\n  \"parent_id\" : \"parent_id\",\r\n  \"is_shared\" : true,\r\n  \"name\" : \"name\",\r\n  \"view_style\" : \"view_style\",\r\n  \"creator_uid\" : \"creator_uid\",\r\n  \"id\" : \"id\",\r\n  \"child_order\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ResponseCreateProjectApiV1ProjectsPost>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete Project
        /// </summary>
        /// <remarks>Deletes a project and all of its sections and tasks.</remarks>
        /// <param name="projectId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/api/v1/projects/{project_id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteProjectApiV1ProjectsProjectIdDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Successful Response")]
        public virtual IActionResult DeleteProjectApiV1ProjectsProjectIdDelete([FromRoute (Name = "project_id")][Required]ProjectId3 projectId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Archived
        /// </summary>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/projects/archived")]
        [ValidateModelState]
        [SwaggerOperation("GetArchivedApiV1ProjectsArchivedGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(PaginatedListAnnotatedProjectV1ViewFieldInfoAnnotationNoneTypeRequiredTrueExamplesIdNameChildOrderParentIdColorCollapsedIsArchivedIsDeletedViewStyle), description: "Successful Response")]
        public virtual IActionResult GetArchivedApiV1ProjectsArchivedGet([FromQuery (Name = "cursor")][RegularExpression("^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$")] [MinLength(1)]string cursor, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"next_cursor\" : \"next_cursor\",\r\n  \"results\" : [ {\r\n    \"key\" : \"\"\r\n  }, {\r\n    \"key\" : \"\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PaginatedListAnnotatedProjectV1ViewFieldInfoAnnotationNoneTypeRequiredTrueExamplesIdNameChildOrderParentIdColorCollapsedIsArchivedIsDeletedViewStyle>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Project
        /// </summary>
        /// <remarks>Returns a project object related to the given ID</remarks>
        /// <param name="projectId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/projects/{project_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectApiV1ProjectsProjectIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(ResponseGetProjectApiV1ProjectsProjectIdGet), description: "Successful Response")]
        public virtual IActionResult GetProjectApiV1ProjectsProjectIdGet([FromRoute (Name = "project_id")][Required]ProjectId3 projectId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"public_key\" : \"public_key\",\r\n  \"is_favorite\" : true,\r\n  \"access\" : {\r\n    \"visibility\" : \"restricted\",\r\n    \"configuration\" : { }\r\n  },\r\n  \"role\" : \"role\",\r\n  \"color\" : \"color\",\r\n  \"is_frozen\" : true,\r\n  \"created_at\" : \"created_at\",\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"can_assign_tasks\" : true,\r\n  \"inbox_project\" : true,\r\n  \"default_order\" : 6,\r\n  \"is_deleted\" : true,\r\n  \"is_archived\" : true,\r\n  \"updated_at\" : \"updated_at\",\r\n  \"parent_id\" : \"parent_id\",\r\n  \"is_shared\" : true,\r\n  \"name\" : \"name\",\r\n  \"view_style\" : \"view_style\",\r\n  \"creator_uid\" : \"creator_uid\",\r\n  \"id\" : \"id\",\r\n  \"child_order\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ResponseGetProjectApiV1ProjectsProjectIdGet>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Project Collaborators
        /// </summary>
        /// <param name="projectId"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <param name="publicKey"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/projects/{project_id}/collaborators")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectCollaboratorsApiV1ProjectsProjectIdCollaboratorsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(PaginatedListCollaborator), description: "Successful Response")]
        public virtual IActionResult GetProjectCollaboratorsApiV1ProjectsProjectIdCollaboratorsGet([FromRoute (Name = "project_id")][Required]ProjectId3 projectId, [FromQuery (Name = "cursor")][RegularExpression("^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$")] [MinLength(1)]string cursor, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "public_key")]string publicKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"next_cursor\" : \"next_cursor\",\r\n  \"results\" : [ {\r\n    \"name\" : \"name\",\r\n    \"id\" : \"id\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"name\" : \"name\",\r\n    \"id\" : \"id\",\r\n    \"email\" : \"email\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PaginatedListCollaborator>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Projects
        /// </summary>
        /// <remarks>Returns a list containing all active user projects</remarks>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/projects")]
        [ValidateModelState]
        [SwaggerOperation("GetProjectsApiV1ProjectsGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(PaginatedListAnnotatedUnionPersonalProjectSyncViewWorkspaceProjectSyncViewFieldInfoAnnotationNoneTypeRequiredTrueTitleProjectObject), description: "Successful Response")]
        public virtual IActionResult GetProjectsApiV1ProjectsGet([FromQuery (Name = "cursor")][RegularExpression("^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$")] [MinLength(1)]string cursor, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"next_cursor\" : \"next_cursor\",\r\n  \"results\" : [ {\r\n    \"public_key\" : \"public_key\",\r\n    \"is_favorite\" : true,\r\n    \"access\" : {\r\n      \"visibility\" : \"restricted\",\r\n      \"configuration\" : { }\r\n    },\r\n    \"role\" : \"role\",\r\n    \"color\" : \"color\",\r\n    \"is_frozen\" : true,\r\n    \"created_at\" : \"created_at\",\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"can_assign_tasks\" : true,\r\n    \"inbox_project\" : true,\r\n    \"default_order\" : 6,\r\n    \"is_deleted\" : true,\r\n    \"is_archived\" : true,\r\n    \"updated_at\" : \"updated_at\",\r\n    \"parent_id\" : \"parent_id\",\r\n    \"is_shared\" : true,\r\n    \"name\" : \"name\",\r\n    \"view_style\" : \"view_style\",\r\n    \"creator_uid\" : \"creator_uid\",\r\n    \"id\" : \"id\",\r\n    \"child_order\" : 0\r\n  }, {\r\n    \"public_key\" : \"public_key\",\r\n    \"is_favorite\" : true,\r\n    \"access\" : {\r\n      \"visibility\" : \"restricted\",\r\n      \"configuration\" : { }\r\n    },\r\n    \"role\" : \"role\",\r\n    \"color\" : \"color\",\r\n    \"is_frozen\" : true,\r\n    \"created_at\" : \"created_at\",\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"can_assign_tasks\" : true,\r\n    \"inbox_project\" : true,\r\n    \"default_order\" : 6,\r\n    \"is_deleted\" : true,\r\n    \"is_archived\" : true,\r\n    \"updated_at\" : \"updated_at\",\r\n    \"parent_id\" : \"parent_id\",\r\n    \"is_shared\" : true,\r\n    \"name\" : \"name\",\r\n    \"view_style\" : \"view_style\",\r\n    \"creator_uid\" : \"creator_uid\",\r\n    \"id\" : \"id\",\r\n    \"child_order\" : 0\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PaginatedListAnnotatedUnionPersonalProjectSyncViewWorkspaceProjectSyncViewFieldInfoAnnotationNoneTypeRequiredTrueTitleProjectObject>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Join
        /// </summary>
        /// <remarks>_Only used for workspaces_  This endpoint is used to join a workspace project by a workspace_user and is only usable by the workspace user.</remarks>
        /// <param name="projectId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/projects/{project_id}/join")]
        [ValidateModelState]
        [SwaggerOperation("JoinApiV1ProjectsProjectIdJoinPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetDataV2Response), description: "Successful Response")]
        public virtual IActionResult JoinApiV1ProjectsProjectIdJoinPost([FromRoute (Name = "project_id")][Required]string projectId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"subprojects\" : [ {\r\n    \"key\" : \"\"\r\n  }, {\r\n    \"key\" : \"\"\r\n  } ],\r\n  \"folder\" : {\r\n    \"workspace_id\" : \"workspace_id\",\r\n    \"is_deleted\" : false,\r\n    \"name\" : \"\",\r\n    \"id\" : \"0\",\r\n    \"default_order\" : 0,\r\n    \"child_order\" : 6\r\n  },\r\n  \"collaborator_states\" : [ {\r\n    \"key\" : \"\"\r\n  }, {\r\n    \"key\" : \"\"\r\n  } ],\r\n  \"project\" : {\r\n    \"key\" : \"\"\r\n  },\r\n  \"collaborators\" : [ {\r\n    \"full_name\" : \"full_name\",\r\n    \"is_deleted\" : true,\r\n    \"timezone\" : \"timezone\",\r\n    \"id\" : \"id\",\r\n    \"image_id\" : \"image_id\",\r\n    \"email\" : \"email\"\r\n  }, {\r\n    \"full_name\" : \"full_name\",\r\n    \"is_deleted\" : true,\r\n    \"timezone\" : \"timezone\",\r\n    \"id\" : \"id\",\r\n    \"image_id\" : \"image_id\",\r\n    \"email\" : \"email\"\r\n  } ],\r\n  \"items\" : [ {\r\n    \"key\" : \"\"\r\n  }, {\r\n    \"key\" : \"\"\r\n  } ],\r\n  \"project_notes\" : [ {\r\n    \"key\" : \"\"\r\n  }, {\r\n    \"key\" : \"\"\r\n  } ],\r\n  \"sections\" : [ {\r\n    \"key\" : \"\"\r\n  }, {\r\n    \"key\" : \"\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GetDataV2Response>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Unarchive Project
        /// </summary>
        /// <remarks>Marks a previously archived project as active again. For personal projects, this will make the project visible again for the initiating user. For workspace projects, this will make the project visible again for all applicable workspace users.</remarks>
        /// <param name="projectId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/projects/{project_id}/unarchive")]
        [ValidateModelState]
        [SwaggerOperation("UnarchiveProjectApiV1ProjectsProjectIdUnarchivePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ResponseUnarchiveProjectApiV1ProjectsProjectIdUnarchivePost), description: "Successful Response")]
        public virtual IActionResult UnarchiveProjectApiV1ProjectsProjectIdUnarchivePost([FromRoute (Name = "project_id")][Required]ProjectId3 projectId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"public_key\" : \"public_key\",\r\n  \"is_favorite\" : true,\r\n  \"access\" : {\r\n    \"visibility\" : \"restricted\",\r\n    \"configuration\" : { }\r\n  },\r\n  \"role\" : \"role\",\r\n  \"color\" : \"color\",\r\n  \"is_frozen\" : true,\r\n  \"created_at\" : \"created_at\",\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"can_assign_tasks\" : true,\r\n  \"inbox_project\" : true,\r\n  \"default_order\" : 6,\r\n  \"is_deleted\" : true,\r\n  \"is_archived\" : true,\r\n  \"updated_at\" : \"updated_at\",\r\n  \"parent_id\" : \"parent_id\",\r\n  \"is_shared\" : true,\r\n  \"name\" : \"name\",\r\n  \"view_style\" : \"view_style\",\r\n  \"creator_uid\" : \"creator_uid\",\r\n  \"id\" : \"id\",\r\n  \"child_order\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ResponseUnarchiveProjectApiV1ProjectsProjectIdUnarchivePost>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update Project
        /// </summary>
        /// <remarks>Updated a project and return it</remarks>
        /// <param name="projectId"></param>
        /// <param name="todoistAppsApiRestProjectsBody2"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/projects/{project_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateProjectApiV1ProjectsProjectIdPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ResponseUpdateProjectApiV1ProjectsProjectIdPost), description: "Successful Response")]
        public virtual IActionResult UpdateProjectApiV1ProjectsProjectIdPost([FromRoute (Name = "project_id")][Required]ProjectId3 projectId, [FromBody]TodoistAppsApiRestProjectsBody2 todoistAppsApiRestProjectsBody2)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"public_key\" : \"public_key\",\r\n  \"is_favorite\" : true,\r\n  \"access\" : {\r\n    \"visibility\" : \"restricted\",\r\n    \"configuration\" : { }\r\n  },\r\n  \"role\" : \"role\",\r\n  \"color\" : \"color\",\r\n  \"is_frozen\" : true,\r\n  \"created_at\" : \"created_at\",\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"can_assign_tasks\" : true,\r\n  \"inbox_project\" : true,\r\n  \"default_order\" : 6,\r\n  \"is_deleted\" : true,\r\n  \"is_archived\" : true,\r\n  \"updated_at\" : \"updated_at\",\r\n  \"parent_id\" : \"parent_id\",\r\n  \"is_shared\" : true,\r\n  \"name\" : \"name\",\r\n  \"view_style\" : \"view_style\",\r\n  \"creator_uid\" : \"creator_uid\",\r\n  \"id\" : \"id\",\r\n  \"child_order\" : 0\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ResponseUpdateProjectApiV1ProjectsProjectIdPost>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
