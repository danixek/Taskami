/*
 * Todoist API
 *
 * # Developing with Todoist  Thanks for your interest in developing apps with Todoist. In this section we will provide an overview of the API we offer and cover some common topics for application development using them.  You can use our API for free, but depending on your Todoist account plan (or that of the authenticated user), some features may be restricted.  Please consider subscribing to the [Todoist API mailing list](https://groups.google.com/a/doist.com/g/todoist-api) to get important updates.  ## Our API  Our API uses an approach that should be familiar to anyone with experience calling [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.  We also have a special endpoint called `/sync`, which is used by our first-party clients to keep the data updated locally without having to make many separate requests to the API. Anyone can use it, and some actions will only be available via `/sync`. The format is unconventional compared to current API standards, but it is our main driver for first-party apps.  ## Our SDKs  Our Python and JavaScript SDKs streamline working with the Todoist API, and can be installed from the main package registries for each ecosystem.  For instructions, examples, and reference documentation, visit their pages:  - [Todoist Python SDK](https://doist.github.io/todoist-api-python/) - [Todoist TypeScript SDK](https://doist.github.io/todoist-api-typescript/)  ## Pagination  Paginated endpoints are marked by having the `next_cursor` attribute in the response.  When a response comes back with `next_cursor: null`, it means the endpoint is paginated but there are no more pages to request data from.  If the cursor is `non-null`, there are more objects to return, and a new request is necessary to get the next page.  The `next_cursor` contains an _opaque_ string that shouldn't be modified in any way. It should be sent **as-is** in the `cursor` parameter along with the same parameters used in the previous request.  ## Integrations  Integrations can be created and updated [here](https://app.todoist.com/app/settings/integrations/app-management).  Once done, they can also be submitted for evaluation and inclusion in [our official integrations list](https://www.todoist.com/integrations). This not only serves as an opportunity to market your integration to our audience, but will also serve as a way to help users get set up and familiar with your app quickly.  To get your integration evaluated, please submit it via [this page](https://doist.typeform.com/to/Vvq7kNcl?typeform-source=todoist.com/api/v1/docs).  Lost? Reach out to us at [submissions@doist.com](mailto:submissions@doist.com) anytime. 
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TasksApiController : ControllerBase
    { 
        /// <summary>
        /// Close Task
        /// </summary>
        /// <remarks>Closes a task.  The command performs in the same way as our official clients:  Regular tasks are marked complete and moved to history, along with their subtasks. Tasks with [recurring due dates](https://todoist.com/help/articles/introduction-to-recurring-dates-YUYVJJAV) will be scheduled to their next occurrence.</remarks>
        /// <param name="taskId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/tasks/{task_id}/close")]
        [ValidateModelState]
        [SwaggerOperation("CloseTaskApiV1TasksTaskIdClosePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Successful Response")]
        public virtual IActionResult CloseTaskApiV1TasksTaskIdClosePost([FromRoute (Name = "task_id")][Required]TaskId2 taskId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Create Task
        /// </summary>
        /// <param name="todoistAppsApiRestTasksBody1"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/tasks")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateTaskApiV1TasksPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ItemSyncView), description: "Successful Response")]
        public virtual IActionResult CreateTaskApiV1TasksPost([FromBody]TodoistAppsApiRestTasksBody1 todoistAppsApiRestTasksBody1)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"responsible_uid\" : \"responsible_uid\",\r\n  \"day_order\" : 5,\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"added_by_uid\" : \"added_by_uid\",\r\n  \"priority\" : 6,\r\n  \"content\" : \"content\",\r\n  \"labels\" : [ \"labels\", \"labels\" ],\r\n  \"duration\" : {\r\n    \"key\" : 0\r\n  },\r\n  \"added_at\" : \"added_at\",\r\n  \"completed_at\" : \"completed_at\",\r\n  \"is_deleted\" : true,\r\n  \"section_id\" : \"section_id\",\r\n  \"updated_at\" : \"updated_at\",\r\n  \"user_id\" : \"user_id\",\r\n  \"project_id\" : \"project_id\",\r\n  \"due\" : {\r\n    \"key\" : \"\"\r\n  },\r\n  \"parent_id\" : \"parent_id\",\r\n  \"checked\" : true,\r\n  \"id\" : \"id\",\r\n  \"deadline\" : {\r\n    \"key\" : \"ItemSyncView_deadline_value\"\r\n  },\r\n  \"note_count\" : 5,\r\n  \"assigned_by_uid\" : \"assigned_by_uid\",\r\n  \"child_order\" : 1\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ItemSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Delete Task
        /// </summary>
        /// <param name="taskId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/api/v1/tasks/{task_id}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteTaskApiV1TasksTaskIdDelete")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Successful Response")]
        public virtual IActionResult DeleteTaskApiV1TasksTaskIdDelete([FromRoute (Name = "task_id")][Required]TaskId2 taskId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Task
        /// </summary>
        /// <remarks>Returns a single active (non-completed) task by ID</remarks>
        /// <param name="taskId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/tasks/{task_id}")]
        [ValidateModelState]
        [SwaggerOperation("GetTaskApiV1TasksTaskIdGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(ItemSyncView), description: "Successful Response")]
        public virtual IActionResult GetTaskApiV1TasksTaskIdGet([FromRoute (Name = "task_id")][Required]TaskId2 taskId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"responsible_uid\" : \"responsible_uid\",\r\n  \"day_order\" : 5,\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"added_by_uid\" : \"added_by_uid\",\r\n  \"priority\" : 6,\r\n  \"content\" : \"content\",\r\n  \"labels\" : [ \"labels\", \"labels\" ],\r\n  \"duration\" : {\r\n    \"key\" : 0\r\n  },\r\n  \"added_at\" : \"added_at\",\r\n  \"completed_at\" : \"completed_at\",\r\n  \"is_deleted\" : true,\r\n  \"section_id\" : \"section_id\",\r\n  \"updated_at\" : \"updated_at\",\r\n  \"user_id\" : \"user_id\",\r\n  \"project_id\" : \"project_id\",\r\n  \"due\" : {\r\n    \"key\" : \"\"\r\n  },\r\n  \"parent_id\" : \"parent_id\",\r\n  \"checked\" : true,\r\n  \"id\" : \"id\",\r\n  \"deadline\" : {\r\n    \"key\" : \"ItemSyncView_deadline_value\"\r\n  },\r\n  \"note_count\" : 5,\r\n  \"assigned_by_uid\" : \"assigned_by_uid\",\r\n  \"child_order\" : 1\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ItemSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Tasks
        /// </summary>
        /// <remarks>Returns a paginated list containing all active tasks</remarks>
        /// <param name="projectId"></param>
        /// <param name="sectionId"></param>
        /// <param name="parentId"></param>
        /// <param name="label"></param>
        /// <param name="ids"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/tasks")]
        [ValidateModelState]
        [SwaggerOperation("GetTasksApiV1TasksGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(PaginatedListItemSyncView), description: "Successful Response")]
        public virtual IActionResult GetTasksApiV1TasksGet([FromQuery (Name = "project_id")]ProjectId2 projectId, [FromQuery (Name = "section_id")]SectionId sectionId, [FromQuery (Name = "parent_id")]ParentId parentId, [FromQuery (Name = "label")]string label, [FromQuery (Name = "ids")]string ids, [FromQuery (Name = "cursor")][RegularExpression("^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$")] [MinLength(1)]string cursor, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"next_cursor\" : \"next_cursor\",\r\n  \"results\" : [ {\r\n    \"responsible_uid\" : \"responsible_uid\",\r\n    \"day_order\" : 5,\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"added_by_uid\" : \"added_by_uid\",\r\n    \"priority\" : 6,\r\n    \"content\" : \"content\",\r\n    \"labels\" : [ \"labels\", \"labels\" ],\r\n    \"duration\" : {\r\n      \"key\" : 0\r\n    },\r\n    \"added_at\" : \"added_at\",\r\n    \"completed_at\" : \"completed_at\",\r\n    \"is_deleted\" : true,\r\n    \"section_id\" : \"section_id\",\r\n    \"updated_at\" : \"updated_at\",\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"due\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"parent_id\" : \"parent_id\",\r\n    \"checked\" : true,\r\n    \"id\" : \"id\",\r\n    \"deadline\" : {\r\n      \"key\" : \"ItemSyncView_deadline_value\"\r\n    },\r\n    \"note_count\" : 5,\r\n    \"assigned_by_uid\" : \"assigned_by_uid\",\r\n    \"child_order\" : 1\r\n  }, {\r\n    \"responsible_uid\" : \"responsible_uid\",\r\n    \"day_order\" : 5,\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"added_by_uid\" : \"added_by_uid\",\r\n    \"priority\" : 6,\r\n    \"content\" : \"content\",\r\n    \"labels\" : [ \"labels\", \"labels\" ],\r\n    \"duration\" : {\r\n      \"key\" : 0\r\n    },\r\n    \"added_at\" : \"added_at\",\r\n    \"completed_at\" : \"completed_at\",\r\n    \"is_deleted\" : true,\r\n    \"section_id\" : \"section_id\",\r\n    \"updated_at\" : \"updated_at\",\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"due\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"parent_id\" : \"parent_id\",\r\n    \"checked\" : true,\r\n    \"id\" : \"id\",\r\n    \"deadline\" : {\r\n      \"key\" : \"ItemSyncView_deadline_value\"\r\n    },\r\n    \"note_count\" : 5,\r\n    \"assigned_by_uid\" : \"assigned_by_uid\",\r\n    \"child_order\" : 1\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PaginatedListItemSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Tasks By Filter
        /// </summary>
        /// <param name="query"></param>
        /// <param name="lang"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/tasks/filter")]
        [ValidateModelState]
        [SwaggerOperation("GetTasksByFilterApiV1TasksFilterGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(PaginatedListItemSyncView), description: "Successful Response")]
        public virtual IActionResult GetTasksByFilterApiV1TasksFilterGet([FromQuery (Name = "query")][Required()][StringLength(1024, MinimumLength=1)]string query, [FromQuery (Name = "lang")]string lang, [FromQuery (Name = "cursor")][RegularExpression("^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$")] [MinLength(1)]string cursor, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"next_cursor\" : \"next_cursor\",\r\n  \"results\" : [ {\r\n    \"responsible_uid\" : \"responsible_uid\",\r\n    \"day_order\" : 5,\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"added_by_uid\" : \"added_by_uid\",\r\n    \"priority\" : 6,\r\n    \"content\" : \"content\",\r\n    \"labels\" : [ \"labels\", \"labels\" ],\r\n    \"duration\" : {\r\n      \"key\" : 0\r\n    },\r\n    \"added_at\" : \"added_at\",\r\n    \"completed_at\" : \"completed_at\",\r\n    \"is_deleted\" : true,\r\n    \"section_id\" : \"section_id\",\r\n    \"updated_at\" : \"updated_at\",\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"due\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"parent_id\" : \"parent_id\",\r\n    \"checked\" : true,\r\n    \"id\" : \"id\",\r\n    \"deadline\" : {\r\n      \"key\" : \"ItemSyncView_deadline_value\"\r\n    },\r\n    \"note_count\" : 5,\r\n    \"assigned_by_uid\" : \"assigned_by_uid\",\r\n    \"child_order\" : 1\r\n  }, {\r\n    \"responsible_uid\" : \"responsible_uid\",\r\n    \"day_order\" : 5,\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"added_by_uid\" : \"added_by_uid\",\r\n    \"priority\" : 6,\r\n    \"content\" : \"content\",\r\n    \"labels\" : [ \"labels\", \"labels\" ],\r\n    \"duration\" : {\r\n      \"key\" : 0\r\n    },\r\n    \"added_at\" : \"added_at\",\r\n    \"completed_at\" : \"completed_at\",\r\n    \"is_deleted\" : true,\r\n    \"section_id\" : \"section_id\",\r\n    \"updated_at\" : \"updated_at\",\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"due\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"parent_id\" : \"parent_id\",\r\n    \"checked\" : true,\r\n    \"id\" : \"id\",\r\n    \"deadline\" : {\r\n      \"key\" : \"ItemSyncView_deadline_value\"\r\n    },\r\n    \"note_count\" : 5,\r\n    \"assigned_by_uid\" : \"assigned_by_uid\",\r\n    \"child_order\" : 1\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<PaginatedListItemSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Move Task
        /// </summary>
        /// <remarks>Moves task to another project, section or parent.</remarks>
        /// <param name="taskId"></param>
        /// <param name="todoistAppsApiRestTasksBody2"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/tasks/{task_id}/move")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("MoveTaskApiV1TasksTaskIdMovePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ItemSyncView), description: "Successful Response")]
        public virtual IActionResult MoveTaskApiV1TasksTaskIdMovePost([FromRoute (Name = "task_id")][Required]string taskId, [FromBody]TodoistAppsApiRestTasksBody2 todoistAppsApiRestTasksBody2)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"responsible_uid\" : \"responsible_uid\",\r\n  \"day_order\" : 5,\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"added_by_uid\" : \"added_by_uid\",\r\n  \"priority\" : 6,\r\n  \"content\" : \"content\",\r\n  \"labels\" : [ \"labels\", \"labels\" ],\r\n  \"duration\" : {\r\n    \"key\" : 0\r\n  },\r\n  \"added_at\" : \"added_at\",\r\n  \"completed_at\" : \"completed_at\",\r\n  \"is_deleted\" : true,\r\n  \"section_id\" : \"section_id\",\r\n  \"updated_at\" : \"updated_at\",\r\n  \"user_id\" : \"user_id\",\r\n  \"project_id\" : \"project_id\",\r\n  \"due\" : {\r\n    \"key\" : \"\"\r\n  },\r\n  \"parent_id\" : \"parent_id\",\r\n  \"checked\" : true,\r\n  \"id\" : \"id\",\r\n  \"deadline\" : {\r\n    \"key\" : \"ItemSyncView_deadline_value\"\r\n  },\r\n  \"note_count\" : 5,\r\n  \"assigned_by_uid\" : \"assigned_by_uid\",\r\n  \"child_order\" : 1\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ItemSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Quick Add
        /// </summary>
        /// <remarks>Add a new task using the Quick Add implementation similar to that used in the official clients</remarks>
        /// <param name="todoistAppsApiSyncRestQuickBody"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/tasks/quick")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("QuickAddApiV1TasksQuickPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Dictionary<string, Object>), description: "Successful Response")]
        public virtual IActionResult QuickAddApiV1TasksQuickPost([FromBody]TodoistAppsApiSyncRestQuickBody todoistAppsApiSyncRestQuickBody)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Dictionary<string, Object>>(exampleJson)
            : new Dictionary<string, Object>();
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Reopen Task
        /// </summary>
        /// <remarks>Reopens a task.  Any ancestor tasks or sections will also be marked as uncomplete and restored from history.  The reinstated tasks and sections will appear at the end of the list within their parent, after any previously active tasks.</remarks>
        /// <param name="taskId"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/tasks/{task_id}/reopen")]
        [ValidateModelState]
        [SwaggerOperation("ReopenTaskApiV1TasksTaskIdReopenPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(Object), description: "Successful Response")]
        public virtual IActionResult ReopenTaskApiV1TasksTaskIdReopenPost([FromRoute (Name = "task_id")][Required]TaskId1 taskId)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Object>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tasks Completed By Completion Date
        /// </summary>
        /// <remarks>Retrieves a list of completed tasks strictly limited by the specified completion date range (up to 3 months).  It can retrieve completed items:  - From all the projects the user has joined in a workspace - From all the projects of the user - That match many [supported   filters](https://todoist.com/help/articles/introduction-to-filters-V98wIH)  By default, the response is limited to a page containing a maximum of 50 items (configurable using &#x60;limit&#x60;).  Subsequent pages of results can be fetched by using the &#x60;next_cursor&#x60; value from the response as the &#x60;cursor&#x60; value for the next request.</remarks>
        /// <param name="since"></param>
        /// <param name="until"></param>
        /// <param name="workspaceId"></param>
        /// <param name="projectId"></param>
        /// <param name="sectionId"></param>
        /// <param name="parentId"></param>
        /// <param name="filterQuery"></param>
        /// <param name="filterLang"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <param name="publicKey"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/tasks/completed/by_completion_date")]
        [ValidateModelState]
        [SwaggerOperation("TasksCompletedByCompletionDateApiV1TasksCompletedByCompletionDateGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(TasksCompletedDateResponse), description: "Successful Response")]
        public virtual IActionResult TasksCompletedByCompletionDateApiV1TasksCompletedByCompletionDateGet([FromQuery (Name = "since")][Required()]DateTime since, [FromQuery (Name = "until")][Required()]DateTime until, [FromQuery (Name = "workspace_id")]int? workspaceId, [FromQuery (Name = "project_id")]ProjectId2 projectId, [FromQuery (Name = "section_id")]SectionId1 sectionId, [FromQuery (Name = "parent_id")]ParentId parentId, [FromQuery (Name = "filter_query")][StringLength(1024, MinimumLength=1)]string filterQuery, [FromQuery (Name = "filter_lang")]string filterLang, [FromQuery (Name = "cursor")][RegularExpression("^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$")] [MinLength(1)]string cursor, [FromQuery (Name = "limit")]int? limit, [FromQuery (Name = "public_key")]string publicKey)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"next_cursor\" : \"next_cursor\",\r\n  \"items\" : [ {\r\n    \"responsible_uid\" : \"responsible_uid\",\r\n    \"day_order\" : 5,\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"added_by_uid\" : \"added_by_uid\",\r\n    \"priority\" : 6,\r\n    \"content\" : \"content\",\r\n    \"labels\" : [ \"labels\", \"labels\" ],\r\n    \"duration\" : {\r\n      \"key\" : 0\r\n    },\r\n    \"added_at\" : \"added_at\",\r\n    \"completed_at\" : \"completed_at\",\r\n    \"is_deleted\" : true,\r\n    \"section_id\" : \"section_id\",\r\n    \"updated_at\" : \"updated_at\",\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"due\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"parent_id\" : \"parent_id\",\r\n    \"checked\" : true,\r\n    \"id\" : \"id\",\r\n    \"deadline\" : {\r\n      \"key\" : \"ItemSyncView_deadline_value\"\r\n    },\r\n    \"note_count\" : 5,\r\n    \"assigned_by_uid\" : \"assigned_by_uid\",\r\n    \"child_order\" : 1\r\n  }, {\r\n    \"responsible_uid\" : \"responsible_uid\",\r\n    \"day_order\" : 5,\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"added_by_uid\" : \"added_by_uid\",\r\n    \"priority\" : 6,\r\n    \"content\" : \"content\",\r\n    \"labels\" : [ \"labels\", \"labels\" ],\r\n    \"duration\" : {\r\n      \"key\" : 0\r\n    },\r\n    \"added_at\" : \"added_at\",\r\n    \"completed_at\" : \"completed_at\",\r\n    \"is_deleted\" : true,\r\n    \"section_id\" : \"section_id\",\r\n    \"updated_at\" : \"updated_at\",\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"due\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"parent_id\" : \"parent_id\",\r\n    \"checked\" : true,\r\n    \"id\" : \"id\",\r\n    \"deadline\" : {\r\n      \"key\" : \"ItemSyncView_deadline_value\"\r\n    },\r\n    \"note_count\" : 5,\r\n    \"assigned_by_uid\" : \"assigned_by_uid\",\r\n    \"child_order\" : 1\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TasksCompletedDateResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Tasks Completed By Due Date
        /// </summary>
        /// <remarks>Retrieves a list of completed items strictly limited by the specified due date range (up to 6 weeks).  It can retrieve completed items:  - From within a project, section, or parent item - From all the projects the user has joined in a workspace - From all the projects of the user - That match many [supported   filters](https://todoist.com/help/articles/introduction-to-filters-V98wIH)  By default, the response is limited to a page containing a maximum of 50 items (configurable using &#x60;limit&#x60;).  Subsequent pages of results can be fetched by using the &#x60;next_cursor&#x60; value from the response as the &#x60;cursor&#x60; value for the next request.</remarks>
        /// <param name="since"></param>
        /// <param name="until"></param>
        /// <param name="workspaceId"></param>
        /// <param name="projectId"></param>
        /// <param name="sectionId"></param>
        /// <param name="parentId"></param>
        /// <param name="filterQuery"></param>
        /// <param name="filterLang"></param>
        /// <param name="cursor"></param>
        /// <param name="limit"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/v1/tasks/completed/by_due_date")]
        [ValidateModelState]
        [SwaggerOperation("TasksCompletedByDueDateApiV1TasksCompletedByDueDateGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(TasksCompletedDateResponse), description: "Successful Response")]
        public virtual IActionResult TasksCompletedByDueDateApiV1TasksCompletedByDueDateGet([FromQuery (Name = "since")][Required()]DateTime since, [FromQuery (Name = "until")][Required()]DateTime until, [FromQuery (Name = "workspace_id")]int? workspaceId, [FromQuery (Name = "project_id")]ProjectId2 projectId, [FromQuery (Name = "section_id")]SectionId1 sectionId, [FromQuery (Name = "parent_id")]ParentId parentId, [FromQuery (Name = "filter_query")][StringLength(1024, MinimumLength=1)]string filterQuery, [FromQuery (Name = "filter_lang")]string filterLang, [FromQuery (Name = "cursor")][RegularExpression("^[0-9a-zA-Z_-]+\\.[0-9a-zA-Z_-]+$")] [MinLength(1)]string cursor, [FromQuery (Name = "limit")]int? limit)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"next_cursor\" : \"next_cursor\",\r\n  \"items\" : [ {\r\n    \"responsible_uid\" : \"responsible_uid\",\r\n    \"day_order\" : 5,\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"added_by_uid\" : \"added_by_uid\",\r\n    \"priority\" : 6,\r\n    \"content\" : \"content\",\r\n    \"labels\" : [ \"labels\", \"labels\" ],\r\n    \"duration\" : {\r\n      \"key\" : 0\r\n    },\r\n    \"added_at\" : \"added_at\",\r\n    \"completed_at\" : \"completed_at\",\r\n    \"is_deleted\" : true,\r\n    \"section_id\" : \"section_id\",\r\n    \"updated_at\" : \"updated_at\",\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"due\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"parent_id\" : \"parent_id\",\r\n    \"checked\" : true,\r\n    \"id\" : \"id\",\r\n    \"deadline\" : {\r\n      \"key\" : \"ItemSyncView_deadline_value\"\r\n    },\r\n    \"note_count\" : 5,\r\n    \"assigned_by_uid\" : \"assigned_by_uid\",\r\n    \"child_order\" : 1\r\n  }, {\r\n    \"responsible_uid\" : \"responsible_uid\",\r\n    \"day_order\" : 5,\r\n    \"description\" : \"description\",\r\n    \"is_collapsed\" : true,\r\n    \"added_by_uid\" : \"added_by_uid\",\r\n    \"priority\" : 6,\r\n    \"content\" : \"content\",\r\n    \"labels\" : [ \"labels\", \"labels\" ],\r\n    \"duration\" : {\r\n      \"key\" : 0\r\n    },\r\n    \"added_at\" : \"added_at\",\r\n    \"completed_at\" : \"completed_at\",\r\n    \"is_deleted\" : true,\r\n    \"section_id\" : \"section_id\",\r\n    \"updated_at\" : \"updated_at\",\r\n    \"user_id\" : \"user_id\",\r\n    \"project_id\" : \"project_id\",\r\n    \"due\" : {\r\n      \"key\" : \"\"\r\n    },\r\n    \"parent_id\" : \"parent_id\",\r\n    \"checked\" : true,\r\n    \"id\" : \"id\",\r\n    \"deadline\" : {\r\n      \"key\" : \"ItemSyncView_deadline_value\"\r\n    },\r\n    \"note_count\" : 5,\r\n    \"assigned_by_uid\" : \"assigned_by_uid\",\r\n    \"child_order\" : 1\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TasksCompletedDateResponse>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Update Task
        /// </summary>
        /// <param name="taskId"></param>
        /// <param name="todoistAppsApiRestTasksBody3"></param>
        /// <response code="200">Successful Response</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpPost]
        [Route("/api/v1/tasks/{task_id}")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateTaskApiV1TasksTaskIdPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ItemSyncView), description: "Successful Response")]
        public virtual IActionResult UpdateTaskApiV1TasksTaskIdPost([FromRoute (Name = "task_id")][Required]TaskId2 taskId, [FromBody]TodoistAppsApiRestTasksBody3 todoistAppsApiRestTasksBody3)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(403);
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\r\n  \"responsible_uid\" : \"responsible_uid\",\r\n  \"day_order\" : 5,\r\n  \"description\" : \"description\",\r\n  \"is_collapsed\" : true,\r\n  \"added_by_uid\" : \"added_by_uid\",\r\n  \"priority\" : 6,\r\n  \"content\" : \"content\",\r\n  \"labels\" : [ \"labels\", \"labels\" ],\r\n  \"duration\" : {\r\n    \"key\" : 0\r\n  },\r\n  \"added_at\" : \"added_at\",\r\n  \"completed_at\" : \"completed_at\",\r\n  \"is_deleted\" : true,\r\n  \"section_id\" : \"section_id\",\r\n  \"updated_at\" : \"updated_at\",\r\n  \"user_id\" : \"user_id\",\r\n  \"project_id\" : \"project_id\",\r\n  \"due\" : {\r\n    \"key\" : \"\"\r\n  },\r\n  \"parent_id\" : \"parent_id\",\r\n  \"checked\" : true,\r\n  \"id\" : \"id\",\r\n  \"deadline\" : {\r\n    \"key\" : \"ItemSyncView_deadline_value\"\r\n  },\r\n  \"note_count\" : 5,\r\n  \"assigned_by_uid\" : \"assigned_by_uid\",\r\n  \"child_order\" : 1\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ItemSyncView>(exampleJson)
            : default;
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
